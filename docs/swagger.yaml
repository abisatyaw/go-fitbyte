definitions:
  entities.AuthRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 32
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  entities.Book:
    properties:
      author:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      title:
        type: string
      updatedAt:
        type: string
    type: object
  entities.CreateActivityRequest:
    properties:
      activityType:
        type: string
      doneAt:
        type: string
      durationInMinutes:
        minimum: 1
        type: integer
    required:
    - activityType
    - doneAt
    - durationInMinutes
    type: object
  entities.DeleteRequest:
    properties:
      id:
        type: integer
    type: object
  entities.HeightUnitType:
    enum:
    - CM
    - INCH
    type: string
    x-enum-varnames:
    - HeightCM
    - HeightINCH
  entities.PreferenceType:
    enum:
    - CARDIO
    - WEIGHT
    type: string
    x-enum-varnames:
    - PreferenceCardio
    - PreferenceWeight
  entities.UpdateBookRequest:
    properties:
      author:
        type: string
      id:
        type: integer
      title:
        type: string
    required:
    - id
    type: object
  entities.UpdateProfile:
    properties:
      height:
        maximum: 250
        minimum: 3
        type: integer
      heightUnit:
        allOf:
        - $ref: '#/definitions/entities.HeightUnitType'
        enum:
        - CM
        - INCH
      imageUri:
        example: ""
        type: string
      name:
        example: ""
        maxLength: 60
        type: string
      preference:
        allOf:
        - $ref: '#/definitions/entities.PreferenceType'
        enum:
        - CARDIO
        - WEIGHT
      weight:
        maximum: 1000
        minimum: 10
        type: integer
      weightUnit:
        allOf:
        - $ref: '#/definitions/entities.WeightUnitType'
        enum:
        - KG
        - LBS
    required:
    - height
    - heightUnit
    - preference
    - weight
    - weightUnit
    type: object
  entities.WeightUnitType:
    enum:
    - KG
    - LBS
    type: string
    x-enum-varnames:
    - WeightKG
    - WeightLBS
info:
  contact: {}
  description: This is my API with JWT auth
  title: My API
  version: "1.0"
paths:
  /api/v1/activity:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all activities for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get all activities
      tags:
      - Activities
    post:
      consumes:
      - application/json
      description: Add a new activity to the collection
      parameters:
      - description: Activity object
        in: body
        name: activity
        required: true
        schema:
          $ref: '#/definitions/entities.CreateActivityRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Create a new activity
      tags:
      - Activities
  /api/v1/activity/{id}:
    delete:
      consumes:
      - application/json
      description: Remove an activity from the collection
      parameters:
      - description: Activity ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Delete an activity
      tags:
      - Activities
    get:
      consumes:
      - application/json
      description: Retrieve a specific activity by its ID
      parameters:
      - description: Activity ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get activity by ID
      tags:
      - Activities
    put:
      consumes:
      - application/json
      description: Update an existing activity
      parameters:
      - description: Activity ID
        in: path
        name: id
        required: true
        type: integer
      - description: Activity update object
        in: body
        name: activity
        required: true
        schema:
          $ref: '#/definitions/entities.CreateActivityRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Update an activity
      tags:
      - Activities
  /api/v1/books:
    delete:
      consumes:
      - application/json
      description: Remove a book from the collection
      parameters:
      - description: Delete request with book ID
        in: body
        name: deleteRequest
        required: true
        schema:
          $ref: '#/definitions/entities.DeleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Delete a book
      tags:
      - Books
    get:
      consumes:
      - application/json
      description: Retrieve a list of all books
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get all books
      tags:
      - Books
    post:
      consumes:
      - application/json
      description: Add a new book to the collection
      parameters:
      - description: Book object
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/entities.Book'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new book
      tags:
      - Books
    put:
      consumes:
      - application/json
      description: Update an existing book (partial updates allowed)
      parameters:
      - description: Book update request (partial fields allowed)
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/entities.UpdateBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update a book
      tags:
      - Books
  /api/v1/login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: 'User '
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entities.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Login
      tags:
      - Autentifikasi
  /api/v1/register:
    post:
      consumes:
      - application/json
      description: Create new user
      parameters:
      - description: 'User '
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entities.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create new user
      tags:
      - Autentifikasi
  /api/v1/upload-file:
    post:
      consumes:
      - multipart/form-data
      description: Upload user file
      parameters:
      - description: User File
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Upload user file
      tags:
      - Upload File
  /api/v1/user:
    get:
      consumes:
      - application/json
      description: Get user profile from JWT token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get current user
      tags:
      - Profile
    put:
      consumes:
      - application/json
      description: Update an existing profile (partial updates allowed)
      parameters:
      - description: User update request (partial fields allowed)
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entities.UpdateProfile'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Update a profile
      tags:
      - Profile
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
